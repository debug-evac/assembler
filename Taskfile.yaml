version: '3'

vars:
  TARGETS: 'x86_64-unknown-linux-gnu x86_64-pc-windows-gnu aarch64-apple-darwin'

tasks:
  full-release:
    aliases: [fr]
    cmds:
      - cargo release {{.CLI_ARGS}}
      - sleep 1
      - git push
      - cargo clean
      - task: build-binaries
      - cargo clean
      - task: build-python-packages
      - task: create-release-git
      - for: ['main', 'stable']
        task: checkout-and-merge
        vars:
          BRANCH: '{{.ITEM}}'
      - echo 'Done! You can now remove the release branch.'
    env:
      PUBLISH_GRACE_SLEEP: 5

  checkout-and-merge:
    internal: true
    cmds:
      - git checkout {{.BRANCH}}
      - sleep 1
      - git merge origin/release/{{.VERSION}}
      - sleep 1
    vars:
      VERSION:
        sh: grep -Eo '[0-9]+\.[0-9]+\.[0-9]+' Cargo.toml | head -1
    requires:
      vars: [BRANCH]

  create-release-git:
    aliases: [gr]
    cmds:
      - tea r c --tag '{{.VERSION}}' --target 'release/{{.VERSION}}' --title 'Release {{.VERSION}}' --note '## {{.RELEASE_BODY}}' --login mafiasi-gitea --repo Prj-MR/Assembler {{.FILE_ARGS}}
    vars:
      VERSION:
        sh: grep -Eo '[0-9]+\.[0-9]+\.[0-9]+' Cargo.toml | head -1
      RELEASE_BODY:
        sh: grep -Pzo "(?s)\[{{.VERSION}}\].*?(?=## \[|\[)" CHANGELOG.md | tr '\0' '\n'
      FILE_ARGS:
        sh: find . -maxdepth 2 -name 'assembler-*' -printf '--asset="target/%f" '

  build-python-packages:
    aliases: [pb]
    cmds:
      - .venv/bin/python3 -m maturin publish --profile release --target x86_64-unknown-linux-gnu --zig --features "python_lib" -r mafiasi-gitea
      - .venv/bin/python3 -m maturin publish --profile release --target aarch64-apple-darwin --zig --features "python_lib" -r mafiasi-gitea --no-sdist
      - PYO3_CROSS_LIB_DIR=./python-win .venv/bin/python3 -m maturin publish --profile release --target x86_64-pc-windows-gnu --features "python_lib" -r mafiasi-gitea --no-sdist

  build-binaries:
    aliases: [bb]
    cmds:
      - for: { var: TARGETS, split: ' ' }
        task: build-binary
        vars:
          TARGET: '{{.ITEM}}'
      - for: { var: TARGETS, split: ' ' }
        task: rename-move-binary
        vars:
          TARGET: '{{.ITEM}}'
      - task: sign-binaries

  build-binary:
    cmds:
      - cross build -r --target {{.TARGET}}
    sources:
      - src/**/*.rs
      - Cargo.toml
    generates:
      - target/{{.TARGET}}/release/assembler'{{if eq .TARGET "x86_64-pc-windows-gnu"}}.exe{{end}}'
    requires:
      vars: [TARGET]

  rename-move-binary:
    internal: true
    cmds:
      - cp target/{{.TARGET}}/release/assembler'{{if eq .TARGET "x86_64-pc-windows-gnu"}}.exe{{end}}' target/assembler-{{.TARGET}}'{{if eq .TARGET "x86_64-pc-windows-gnu"}}.exe{{end}}'
    sources:
      - target/{{.TARGET}}/release/assembler'{{if eq .TARGET "x86_64-pc-windows-gnu"}}.exe{{end}}'
    generates:
      - target/assembler-{{.TARGET}}'{{if eq .TARGET "x86_64-pc-windows-gnu"}}.exe{{end}}'
    requires:
      vars: [TARGET]

  sign-binaries:
    cmds:
      - minisign -Sm target/assembler-* -t 'Assembler {{.VERSION}} - Steven Becker <steven.becker@studium.uni-hamburg.de>'
    sources:
      - target/assembler-*
      - exclude: target/assembler-*.minisig
    generates:
      - target/assembler-*.minisig
    vars:
      VERSION:
        sh: grep -Eo '[0-9]+\.[0-9]+\.[0-9]+' Cargo.toml | head -1
